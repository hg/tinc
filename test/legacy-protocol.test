#!/bin/sh

# shellcheck source=testlib.sh
. "${0%/*}/testlib.sh"

echo [STEP] Initialize two nodes

tinc foo <<EOF
init foo
set DeviceType dummy
set Port 32753
set Address localhost
add Subnet 10.0.0.1
set PingTimeout 1
EOF

tinc bar <<EOF
init bar
set DeviceType dummy
set Port 0
add Subnet 10.0.0.2
set PingTimeout 1
set MaxTimeout 1
EOF

echo [STEP] Exchange host config files

tinc foo export | tinc bar exchange | tinc foo import
tinc bar add ConnectTo foo

echo [STEP] Foo 1.1, bar 1.0

tinc bar set ExperimentalProtocol no
tinc foo del bar.Ed25519PublicKey
tinc bar del foo.Ed25519PublicKey

create_script foo hosts/bar-up
create_script bar hosts/foo-up

start_tinc foo
start_tinc bar

wait_script foo hosts/bar-up
wait_script bar hosts/foo-up

require_nodes foo 2
require_nodes bar 2

stop_tinc bar
stop_tinc foo

test -z "$(tinc foo get bar.Ed25519PublicKey)"
test -z "$(tinc bar get foo.Ed25519PublicKey)"

echo [STEP] Foo 1.1, bar upgrades to 1.1

tinc bar del ExperimentalProtocol

start_tinc foo
start_tinc bar

wait_script foo hosts/bar-up
wait_script bar hosts/foo-up

require_nodes foo 2
require_nodes bar 2

stop_tinc bar
stop_tinc foo

test -n "$(tinc foo get bar.Ed25519PublicKey)"
test -n "$(tinc bar get foo.Ed25519PublicKey)"

echo [STEP] Bar downgrades, must no longer be allowed to connect

tinc bar set ExperimentalProtocol no

create_script foo subnet-up
create_script bar subnet-up

start_tinc foo
start_tinc bar

wait_script foo subnet-up
wait_script bar subnet-up

# there is no good way to wait for 'not connecting'
sleep 5

require_nodes foo 1
require_nodes bar 1
