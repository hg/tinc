#!/bin/sh

# shellcheck source=testlib.sh
. "${0%/*}/testlib.sh"

echo "[STEP] Skip this test if we aren\'t root or if \"ip netns\" does not exist"

test "$(id -u)" = "0" || exit $EXIT_SKIP_TEST
ip netns list || exit $EXIT_SKIP_TEST

echo [STEP] Initialize two nodes

tinc foo <<EOF
init foo
set Subnet 192.168.1.1
set Interface ping.test1
set Port 32577
set Address localhost
set AutoConnect no
EOF

# shellcheck disable=SC2016
create_script foo tinc-up '
  ip netns add ping.test1
  ip link set dev $INTERFACE netns ping.test1
  ip netns exec ping.test1 ip addr add 192.168.1.1/24 dev $INTERFACE
  ip netns exec ping.test1 ip link set $INTERFACE up
'

tinc bar <<EOF
init bar
set Subnet 192.168.1.2
set Interface ping.test2
set Port 32574
set AutoConnect no
EOF

# shellcheck disable=SC2016
create_script bar tinc-up '
  ip netns add ping.test2
  ip link set dev $INTERFACE netns ping.test2
  ip netns exec ping.test2 ip addr add 192.168.1.2/24 dev $INTERFACE
  ip netns exec ping.test2 ip link set $INTERFACE up
'

echo [STEP] Exchange configuration files

tinc foo export | tinc bar exchange | tinc foo import

echo [STEP] Start tinc

start_tinc foo
start_tinc bar

wait_script foo tinc-up
wait_script bar tinc-up

echo [STEP] The nodes should not be able to ping each other if there is no connection

must_fail ip netns exec ping.test1 ping -W1 -c3 192.168.1.2

echo [STEP] After connecting they should be

create_script bar hosts/foo-up

tinc bar add ConnectTo foo
wait_script bar hosts/foo-up

ip netns exec ping.test1 ping -W1 -c3 192.168.1.2

echo [STEP] Clean up

ip netns del ping.test2
ip netns del ping.test1
